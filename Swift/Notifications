// From this video: https://www.youtube.com/watch?v=UJree24HWx0

// For push notifications: 
// You'll need a server which notifies APNS (Apple Push Notification Service), which sends a notification to the user's device
// We can use Firebase for this purpose
// Add these two dependencies to your Podfile

// 1. cd to your app's location and add these two dependencies: 

pod 'Firebase/Core'
pod 'Firebase/Messaging'

// 2. Install dependencies
pod install

// 3. On the main project, singing & capabilities, click +Capability
// Search up Push Notifications and add

// 4. Go to AppDelegate, import following libraries 
import Firebase //if you haven't already 
import FirebaseMessaging
import UserNotificationsUI // users consent to receiving push notifications

// 5. In didFinishLaunchingWithOptions
FirebaseApp.configure()

//6. Get set up in Firebase. I've already completed this step for auth.
// (Grab the Firebase configuration file, GoogleService plist and copy
// onto project.)

// 7. AppDelegate needs to conform to the following: 
extension AppDelegate: MessagingDelegate, UNUserNotificationCenterDelegate

//8. Write the minimum code for push notifications in didFinishLaunchingWithOptions:

Messaging.messaging().delegate = self
// Alternatively: 
Messaging.messaging(self)
UNUserNotificationCenter.current().delegate = self

//9. Request consent from user by writing this

UNUserNotificationCenter.current().requestAuthorization(option: [.alert, .sound, .badge]) { success, _ in
   guard success else {
      return
   }

   print("success in APNS registry")
}
   application.registerForRemoteNotifications()

   return true


//10. Modify the stub with:

func messaging(_ messaging: Messaging, didReceiveRegistrationToken fcmToken: String?) {
   messaging.token { token in
      guard let token = token else {
         return
      }
      print("Token: \(token)")
   }
}

// Tokens uniquely identify your app instance and your device. 
// That way, you can't randomly send notifications mistakenly.


// 11. At this stage, all that's left to do is send a notification
// Firebase Console > Project Overview > Project Settings > Cloud Messaging
// We're doing this so Firebase has a way to communicate with Apple
// Apple Dev > Certificates, Identifiers, and Profiles > Keys > Key name: app name, check push notifications > Continue > Download and keep it somewhere safe
// This will be the key Firebase uses to send notifications to Apple
// Back to Firebase, upload the key, type in the Key ID and Team ID

//12. Back to Xcode, build. Then navigate to Firebase Cloud Messaging > Start your first campaign 
// In additional settings, make sure to enable sound and Apple badge, and make the count 1. 


